/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function BuildTextr3f(props) {
  const { nodes, materials } = useGLTF('/models/sharper_build.glb')

  const textureLoader = new THREE.TextureLoader();

  const bakedTexture_build = textureLoader.load('/images/Build_bugfix.jpg');
  bakedTexture_build.flipY = false;
  bakedTexture_build.colorSpace = THREE.SRGBColorSpace;

  const white = new THREE.MeshBasicMaterial({map: bakedTexture_build})
  const outline = new THREE.MeshBasicMaterial({color: "black"})

  return (
    <group {...props} dispose={null} position={[0.3,-0.713,0.4]} rotation-z={-Math.PI/23} rotation-y={Math.PI/30} rotation-x={Math.PI/40} scale-y={1.2} scale-x={1.09}>
      <group name="Scene">
        <group name="BUILD">
          <mesh
            name="Text001"
            castShadow
            receiveShadow
            geometry={nodes.Text001.geometry}
            material={white}
          />
          <mesh
            name="Text001_1"
            castShadow
            receiveShadow
            geometry={nodes.Text001_1.geometry}
            material={outline}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Outlines_build.glb')
